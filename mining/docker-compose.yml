version: '3.10'

services:
    postgres:
        container_name: database
        image: postgres:13
        command:
            - "postgres"
            - "-c"
            - "max_connections=50"
            - "-c"
            - "shared_buffers=1GB"
            - "-c"
            - "effective_cache_size=4GB"
            - "-c"
            - "work_mem=16MB"
            - "-c"
            - "maintenance_work_mem=512MB"
            - "-c"
            - "random_page_cost=1.1"
            - "-c"
            - "temp_file_limit=10GB"
            - "-c"
            - "log_min_duration_statement=200ms"
            - "-c"
            - "idle_in_transaction_session_timeout=10s"
            - "-c"
            - "lock_timeout=1s"
            - "-c"
            - "statement_timeout=60s"
            - "-c"
            - "shared_preload_libraries=pg_stat_statements"
            - "-c"
            - "pg_stat_statements.max=10000"
            - "-c"
            - "pg_stat_statements.track=all"
        environment:
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
            - PGDATA=/var/lib/postgresql/data/pgdata
        volumes:
            - ./data/init:/docker-entrypoint-initdb.d
            - ./data:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U dbevz -d crypto_trade" ]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s
        networks:
            - minenet

    pgadmin:
        container_name: database-admin
        image: dpage/pgadmin4:6.8
        environment:
            PGADMIN_DEFAULT_EMAIL: "d1bevz@yandex.ru"
            PGADMIN_DEFAULT_PASSWORD: "admin"
            PGADMIN_CONFIG_SERVER_MODE: "False"
        volumes:
            - ./pgadmin:/var/lib/pgadmin
        ports:
            - "5050:80"
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    cpus: '0.5'
                    memory: 1G
        networks:
            - minenet

    scheduler:
        container_name: airflow-scheduler
        image: d1bevz/airflow-crypto-trade:0.2
        entrypoint: /opt/airflow/scripts/entrypoint.sh
        deploy:
            restart_policy:
                condition: on-failure
        depends_on:
            - postgres
        env_file:
            - airflow/.env
        networks:
            - minenet
        volumes:
            - ./airflow:/opt/airflow

    webserver:
        container_name: airflow-webserver
        image: d1bevz/airflow-crypto-trade:0.2
        command: webserver
        deploy:
            restart_policy:
                condition: on-failure
        depends_on:
            - postgres
            - scheduler
        env_file:
            - airflow/.env
        volumes:
            - ./airflow:/opt/airflow
        networks:
            - minenet
        ports:
            - "8080:8080"

networks:
    minenet:
        driver: bridge
